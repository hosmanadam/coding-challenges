"""https://projecteuler.net/problem=2

Each new term in the Fibonacci sequence is generated by adding the previous
two terms. By starting with 1 and 2, the first 10 terms will be:

1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

By considering the terms in the Fibonacci sequence whose values do not exceed
four million, find the sum of the even-valued terms.
"""

def get_fibonacci(max, start=[1, 1]):
  if sum(start[-2:]) > max:
    return start
  start.append(sum(start[-2:]))
  return get_fibonacci(max, start)

sequence = get_fibonacci(1000000000000)
evens = {num for num in sequence if num%2==0}
print(sum(evens))


# """Begoner's solution: every 3rd number is even"""
# evens = get_fibonacci(4000000)[2::3]
